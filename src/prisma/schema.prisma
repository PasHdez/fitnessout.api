// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int                @id @default(autoincrement())
  email         String             @unique
  name          String?
  profile       Profile?
  trainingPlans UserTrainingPlan[]
}

model UserTrainingPlan {
  id             Int          @id @default(autoincrement())
  user           User         @relation(fields: [userId], references: [id])
  userId         Int
  startDate      DateTime
  trainingPlanId Int
  trainingPlan   TrainingPlan @relation(fields: [trainingPlanId], references: [id])
}

model TrainingPlan {
  id                Int                @id @default(autoincrement())
  name              String
  durationDays      Int
  userTrainingPlans UserTrainingPlan[]
  trainingDay       TrainingDay[]
}

model TrainingDay {
  id             Int          @id @default(autoincrement())
  day            Int
  dayName        String
  trainingPlanId Int
  trainingPlan   TrainingPlan @relation(fields: [trainingPlanId], references: [id])
  training       Training?    @relation(fields: [trainingId], references: [id])
  trainingId     Int?
}

model Training {
  id          Int                @id @default(autoincrement())
  name        String
  exercises   ExerciseTraining[]
  TrainingDay TrainingDay[]
}

model ExerciseTraining {
  id              Int      @id @default(autoincrement())
  reps            Int
  repsDuration    Int
  rest            Int
  restDuration    Int
  sets            Int
  restBetweenSets Int
  training        Training @relation(fields: [trainingId], references: [id])
  trainingId      Int
  exercise        Exercise @relation(fields: [exerciseId], references: [id])
  exerciseId      Int
}

model Exercise {
  id           Int                @id @default(autoincrement())
  name         String             @unique
  description  String
  gifUrl       String
  videoUrl     String
  exercises    ExerciseTraining[]
  categories   ExerciseCategory[]
  muscleGroups MuscleGroup[]
}

model ExerciseCategory {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  exercises Exercise[]
}

model MuscleGroup {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  exercises Exercise[]
}

model Profile {
  id     Int      @id @default(autoincrement())
  bio    String
  user   User     @relation(fields: [userId], references: [id])
  dob    DateTime
  gender String
  userId Int      @unique
}
